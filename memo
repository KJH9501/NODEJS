1일차

REPL모드 

read 입력
eval 계산
print 출력
loop  반복

모듈 : 부품. module 

-모듈 내부함수를 공개-
exports.(공개적 name) = (내부(원래) name);
모듈을 외부에서도 사용 가능하게끔 해줌
ex) export.plus = add; 
-> 내부에서는 add라고 정의되어 있지만 외부에서는 plus로 호출

※ require 함수 리턴 객체는 상수로(const) 대입.

모듈 안의 것들을 '하나씩' 밖으로 공개할 때는 exports
모듈 내 여러개를 하나의 객체로 만들어서 공개할 때는 module.exports

2일차

비동기프로그래밍 동기프로그래밍 (sync)
비동기 - 콜백이 있음. path(경로), callback(파일 읽은 후 실행될 콜백) 필수
동기 - 콜백이 없음. 

setTimeout함수 (인위적으로 비동기실행) - 특정 밀리초 이후 코드실행.

3일차
프로토콜 - 일련의 통신규약
127.0.0.1 - 루프백 IP (자기호출)
포트번호 - client -> Server 연결시 연결지정번호
URL- 웹상 특정자원위치 표시 문자열
let url = new URL('http://example.com/buisness/mart/item?category=14%id=2965');

console.log(url.protocol);
console.log(url.host);
console.log(url.pathname);
console.log(url.search);
url 구조 확인

4일차
서드파티모듈 관리 npm(node package manager)  숙지
모듈검색순서 숙지.
requir() 내부에 경로가 명시되어있는지 아닌지에 따라 분기.
내부웨 이름만 사용시 코어모듈일 경우 바로 로드, 아닐 시 노드모듈 내 디렉토리나 파일 검색후 index나 package json로드
경로 표시되어있을경우 경로에 따라 모듈 호출
파일 가진 디렉토리가 패키지
하나의 서드파티모듈은 하나의 패키지
서드파티모듈 = 패키지

|package.json| 주요 정보
name - 이름
version - 버전
decription -  설명
keywords - 패키지 키워드 ex) 해시태그
homepage - 관련 URL
bugs - 버그신고가능한 email주소등
license - 라이센스정보
author / contributors - 만든사람 / 기여자
scripts - 간단 스크립트파일정보
dependencies -  현재 의존하고있는 패키지정보 (핵심)

시멘틱버전 sementic version
major . minor . patch
ex) 1.2.65
- patch = api 변화주지않는 범위내의 변화시 업데이트
- minor = 이전버전 api와 호환되는 api상의 변화시 업데이트
- major = 이전버전 api와 호환되지 않는 api상의 변화 시 업데이트 (기존api를 싹다 갈아엎을때)